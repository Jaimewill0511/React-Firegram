{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/form.js","hooks/useFireStore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","size","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setprogress","error","seterror","url","seturl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","a","getDownloadURL","add","createdAt","ProgressBar","setFile","motion","div","initial","width","animate","Form","setfile","types","type","onChange","e","selected","target","files","includes","useFireStore","docs","setdocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","key","whileHover","opacity","layout","onClick","img","src","transition","delay","alt","Modal","selectedImg","classList","contains","y","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0259da70.chunk.js","sourcesContent":["import React from 'react';\n\nimport { AiOutlineCamera } from \"react-icons/ai\";\n\nimport { RiMessengerLine } from \"react-icons/ri\";\n\nconst Title = () => {\n  const size = '2em'\n  return (  \n    <div className=\"title\">\n    <div className=\"title-h1\">\n    <RiMessengerLine   size={size}/>\n    <h1>Tingram</h1>\n    <AiOutlineCamera  size={size}/>\n    </div>\n     \n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  )\n}\n\nexport default Title;","import firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/storage';\r\nimport 'firebase/compat/firestore';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_apiKey,\r\n  authDomain: process.env.REACT_APP_authDomain,\r\n  projectId: process.env.REACT_APP_projectId,\r\n  storageBucket: process.env.REACT_APP_storageBucket,\r\n  messagingSenderId: process.env.REACT_APP_messagingSenderId,\r\n  appId: process.env.REACT_APP_appId\r\n};\r\n\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n\r\nconst projectStorage = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectStorage, projectFirestore, timestamp }","import {useEffect, useState} from 'react'\r\nimport {projectStorage, projectFirestore, timestamp} from '../firebase/config'\r\n\r\nconst useStorage = (file) => {\r\n    const [progress, setprogress] = useState(0)\r\n    const [error, seterror] = useState(null)\r\n    const [url, seturl] = useState(null);\r\n    \r\n\r\n    useEffect(() => {\r\n        // references\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images')\r\n\r\n        storageRef.put(file).on('state_changed', (snap)=> {\r\n            let percentage = (snap.bytesTransferred / snap.totalBytes) * 100;\r\n            setprogress(percentage);\r\n        }, err => {\r\n            seterror(err);\r\n        }, async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            collectionRef.add({url, createdAt: timestamp()})\r\n            seturl(url)\r\n        })\r\n    },[file]);\r\n\r\n\r\n    return {progress, url, error}\r\n}\r\n\r\nexport default useStorage\r\n","import React, {useEffect} from 'react'\r\nimport useStorage from '../hooks/useStorage'\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst ProgressBar = ({file, setFile}) => {\r\n\r\n    const {progress , url} = useStorage(file);\r\n    useEffect(() => {\r\n        if (url){\r\n            setFile(null)\r\n        }\r\n        \r\n    }, [url, setFile])\r\n    return (\r\n        <motion.div className='progress-bar' \r\n        initial={{width: 0}}\r\n        animate={{width: progress + '%'}}\r\n        ></motion.div>\r\n    )\r\n}\r\n\r\nexport default ProgressBar;\r\n","import React , {useState} from 'react'\r\nimport ProgressBar from '../comps/ProgressBar'\r\n\r\nconst Form = () => {\r\n    const [file, setfile] = useState(null);\r\n    const [error, seterror] = useState(null)\r\n    const types = ['image/png', 'image/jpeg'];\r\n    const handleChange =(e)=>{\r\n        let selected = e.target.files[0];\r\n        if (selected && types.includes(selected.type)){\r\n            setfile(selected)\r\n            seterror(null)\r\n        } else{\r\n            setfile(null)\r\n            seterror('Please select an image file (png or jpeg)');\r\n        }\r\n        \r\n    }\r\nreturn (\r\n        <form>\r\n        <label>\r\n        <input type='file' onChange={handleChange}/>\r\n        <span>+</span>\r\n        </label>\r\n            <div className=\"output\">\r\n                {error && <div className='error'>{error}</div>}\r\n                {file && <div className='error'>{file.name}</div>}\r\n                {file && <ProgressBar file={file} setFile={setfile}/>}\r\n\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default Form\r\n","import {useEffect, useState} from 'react'\r\nimport { projectFirestore } from '../firebase/config'\r\n\r\n\r\nconst useFireStore = (collection) => {\r\n    const [docs, setdocs] = useState([])\r\n\r\n    useEffect(() => {\r\n       const unsub = projectFirestore.collection(collection)\r\n       .orderBy('createdAt', 'desc')\r\n       .onSnapshot((snap) => {\r\n           let documents=[];\r\n           snap.forEach(doc => {\r\n               documents.push({...doc.data(), id: doc.id});\r\n           });\r\n           setdocs(documents);\r\n       });\r\n        return ()=> unsub()\r\n    }, [collection])\r\n    return {docs}\r\n}\r\n\r\nexport default useFireStore\r\n","import React from 'react'\r\nimport useFireStore from '../hooks/useFireStore';\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst ImageGrid = ({setSelectedImg}) => {\r\n    const {docs} = useFireStore('images');\r\n    return (\r\n        <div className='img-grid'>\r\n            {docs && docs.map(doc =>\r\n                (<motion.div className='img-wrap' key={doc.id} \r\n                whileHover={{opacity: 1}} layout onClick={() => {\r\n                    setSelectedImg(doc.url)\r\n                }}>\r\n                    <motion.img src={doc.url} \r\n                    initial={{opacity: 0}}\r\n                    animate={{opacity: 1}}\r\n                    transition={{delay: 1}}\r\n                    alt='Enlarged'/>\r\n                </motion.div>)\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ImageGrid\r\n","import React from 'react'\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst Modal = ({selectedImg, setSelectedImg}) => {\r\n\r\nconst onClick = (e) => {\r\n    if (e.target.classList.contains('backdrop')){\r\n        setSelectedImg(null)\r\n    }\r\n}\r\n\r\n    return (\r\n        <motion.div className='backdrop'\r\n         onClick={onClick}\r\n         initial={{ opacity: 0}}\r\n         animate={{ opacity: 1}}>\r\n         \r\n            <motion.img src={selectedImg}\r\n            initial={{ y:\"-100vh\" }} \r\n            animate={ {y: 0}}\r\n            alt='Enlarged pic'/>\r\n        </motion.div>\r\n    )\r\n}\r\n\r\nexport default Modal\r\n","import React, {useState} from 'react';\nimport Title from './comps/Title';\nimport Form from './comps/form';\nimport ImageGrid from './comps/ImageGrid'\nimport Modal from './comps/Modal'\n\n\n\n\nfunction App() {\nconst [selectedImg, setSelectedImg] = useState(null)\n\n  return (\n    \n    <div className=\"App\">\n      <Title/>\n      <Form/>\n      <ImageGrid setSelectedImg={setSelectedImg}/>\n      {selectedImg &&<Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}